// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocolLogin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocolLogin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol_msg {

namespace {

const ::google::protobuf::Descriptor* LoginMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocolLogin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_protocolLogin_2eproto() {
  protobuf_AddDesc_protocolLogin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocolLogin.proto");
  GOOGLE_CHECK(file != NULL);
  LoginMsg_descriptor_ = file->message_type(0);
  static const int LoginMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, authority_),
  };
  LoginMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginMsg_descriptor_,
      LoginMsg::default_instance_,
      LoginMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginMsg, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocolLogin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginMsg_descriptor_, &LoginMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocolLogin_2eproto() {
  delete LoginMsg::default_instance_;
  delete LoginMsg_reflection_;
}

void protobuf_AddDesc_protocolLogin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_protocolLogin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023protocolLogin.proto\022\014protocol_msg\"e\n\010L"
    "oginMsg\022\020\n\010msg_type\030\001 \001(\005\022\021\n\ttimestamp\030\002"
    " \001(\005\022\017\n\007user_id\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022"
    "\021\n\tauthority\030\005 \001(\005b\006proto3", 146);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocolLogin.proto", &protobuf_RegisterTypes);
  LoginMsg::default_instance_ = new LoginMsg();
  LoginMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocolLogin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocolLogin_2eproto {
  StaticDescriptorInitializer_protocolLogin_2eproto() {
    protobuf_AddDesc_protocolLogin_2eproto();
  }
} static_descriptor_initializer_protocolLogin_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginMsg::kMsgTypeFieldNumber;
const int LoginMsg::kTimestampFieldNumber;
const int LoginMsg::kUserIdFieldNumber;
const int LoginMsg::kPasswordFieldNumber;
const int LoginMsg::kAuthorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginMsg::LoginMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_msg.LoginMsg)
}

void LoginMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoginMsg::LoginMsg(const LoginMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_msg.LoginMsg)
}

void LoginMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_type_ = 0;
  timestamp_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_ = 0;
}

LoginMsg::~LoginMsg() {
  // @@protoc_insertion_point(destructor:protocol_msg.LoginMsg)
  SharedDtor();
}

void LoginMsg::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginMsg_descriptor_;
}

const LoginMsg& LoginMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocolLogin_2eproto();
  return *default_instance_;
}

LoginMsg* LoginMsg::default_instance_ = NULL;

LoginMsg* LoginMsg::New(::google::protobuf::Arena* arena) const {
  LoginMsg* n = new LoginMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_msg.LoginMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LoginMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoginMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msg_type_, timestamp_);
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool LoginMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_msg.LoginMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }

      // optional int32 timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_user_id;
        break;
      }

      // optional string user_id = 3;
      case 3: {
        if (tag == 26) {
         parse_user_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol_msg.LoginMsg.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_password;
        break;
      }

      // optional string password = 4;
      case 4: {
        if (tag == 34) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol_msg.LoginMsg.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_authority;
        break;
      }

      // optional int32 authority = 5;
      case 5: {
        if (tag == 40) {
         parse_authority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authority_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_msg.LoginMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_msg.LoginMsg)
  return false;
#undef DO_
}

void LoginMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_msg.LoginMsg)
  // optional int32 msg_type = 1;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_type(), output);
  }

  // optional int32 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timestamp(), output);
  }

  // optional string user_id = 3;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_msg.LoginMsg.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_id(), output);
  }

  // optional string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_msg.LoginMsg.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional int32 authority = 5;
  if (this->authority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->authority(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_msg.LoginMsg)
}

::google::protobuf::uint8* LoginMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_msg.LoginMsg)
  // optional int32 msg_type = 1;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_type(), target);
  }

  // optional int32 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timestamp(), target);
  }

  // optional string user_id = 3;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_msg.LoginMsg.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_id(), target);
  }

  // optional string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_msg.LoginMsg.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional int32 authority = 5;
  if (this->authority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->authority(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_msg.LoginMsg)
  return target;
}

int LoginMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_msg.LoginMsg)
  int total_size = 0;

  // optional int32 msg_type = 1;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_type());
  }

  // optional int32 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timestamp());
  }

  // optional string user_id = 3;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional int32 authority = 5;
  if (this->authority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authority());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_msg.LoginMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_msg.LoginMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_msg.LoginMsg)
    MergeFrom(*source);
  }
}

void LoginMsg::MergeFrom(const LoginMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_msg.LoginMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.authority() != 0) {
    set_authority(from.authority());
  }
}

void LoginMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_msg.LoginMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginMsg::CopyFrom(const LoginMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_msg.LoginMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginMsg::IsInitialized() const {

  return true;
}

void LoginMsg::Swap(LoginMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginMsg::InternalSwap(LoginMsg* other) {
  std::swap(msg_type_, other->msg_type_);
  std::swap(timestamp_, other->timestamp_);
  user_id_.Swap(&other->user_id_);
  password_.Swap(&other->password_);
  std::swap(authority_, other->authority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginMsg_descriptor_;
  metadata.reflection = LoginMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginMsg

// optional int32 msg_type = 1;
void LoginMsg::clear_msg_type() {
  msg_type_ = 0;
}
 ::google::protobuf::int32 LoginMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:protocol_msg.LoginMsg.msg_type)
  return msg_type_;
}
 void LoginMsg::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:protocol_msg.LoginMsg.msg_type)
}

// optional int32 timestamp = 2;
void LoginMsg::clear_timestamp() {
  timestamp_ = 0;
}
 ::google::protobuf::int32 LoginMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol_msg.LoginMsg.timestamp)
  return timestamp_;
}
 void LoginMsg::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:protocol_msg.LoginMsg.timestamp)
}

// optional string user_id = 3;
void LoginMsg::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginMsg::user_id() const {
  // @@protoc_insertion_point(field_get:protocol_msg.LoginMsg.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginMsg::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol_msg.LoginMsg.user_id)
}
 void LoginMsg::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol_msg.LoginMsg.user_id)
}
 void LoginMsg::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol_msg.LoginMsg.user_id)
}
 ::std::string* LoginMsg::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:protocol_msg.LoginMsg.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginMsg::release_user_id() {
  // @@protoc_insertion_point(field_release:protocol_msg.LoginMsg.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginMsg::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol_msg.LoginMsg.user_id)
}

// optional string password = 4;
void LoginMsg::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginMsg::password() const {
  // @@protoc_insertion_point(field_get:protocol_msg.LoginMsg.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginMsg::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol_msg.LoginMsg.password)
}
 void LoginMsg::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol_msg.LoginMsg.password)
}
 void LoginMsg::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol_msg.LoginMsg.password)
}
 ::std::string* LoginMsg::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:protocol_msg.LoginMsg.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginMsg::release_password() {
  // @@protoc_insertion_point(field_release:protocol_msg.LoginMsg.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginMsg::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:protocol_msg.LoginMsg.password)
}

// optional int32 authority = 5;
void LoginMsg::clear_authority() {
  authority_ = 0;
}
 ::google::protobuf::int32 LoginMsg::authority() const {
  // @@protoc_insertion_point(field_get:protocol_msg.LoginMsg.authority)
  return authority_;
}
 void LoginMsg::set_authority(::google::protobuf::int32 value) {
  
  authority_ = value;
  // @@protoc_insertion_point(field_set:protocol_msg.LoginMsg.authority)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol_msg

// @@protoc_insertion_point(global_scope)
